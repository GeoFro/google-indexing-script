{"version":3,"sources":["../src/shared/auth.ts"],"names":["google","fs","path","os","getAccessToken","client_email","private_key","customPath","filePath","filePathFromHome","isFile","isFileFromHome","isCustomFile","key","init_auth","__esmMin"],"mappings":"wCAAA,OAAS,UAAAA,MAAc,aACvB,OAAOC,MAAQ,KACf,OAAOC,MAAU,OACjB,OAAOC,MAAQ,KAUf,eAAsBC,EAAeC,EAAuBC,EAAsBC,EAAqB,CACrG,GAAI,CAACF,GAAgB,CAACC,EAAa,CACjC,IAAME,EAAW,uBACXC,EAAmBP,EAAK,KAAKC,EAAG,QAAQ,EAAG,OAAQ,sBAAsB,EACzEO,EAAST,EAAG,WAAWO,CAAQ,EAC/BG,EAAiBV,EAAG,WAAWQ,CAAgB,EAC/CG,EAAe,CAAC,CAACL,GAAcN,EAAG,WAAWM,CAAU,EAE7D,GAAI,CAACG,GAAU,CAACC,GAAkB,CAACC,EACjC,MAAM,IAAI,MAAM,GAAGJ,CAAQ,yDAAyD,EAGtF,IAAMK,EAAM,KAAK,MACfZ,EAAG,aAAeM,GAAcK,EAAeL,EAAaG,EAASF,EAAWC,EAAkB,MAAM,CAC1G,EACAJ,EAAeQ,EAAI,aACnBP,EAAcO,EAAI,WACpB,KAAO,CACL,GAAI,CAACR,EACH,MAAM,IAAI,MAAM,sDAAsD,EAGxE,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,qDAAqD,CAEzE,CAWA,OADe,MARG,IAAIN,EAAO,KAAK,IAChCK,EACA,OACAC,EACA,CAAC,sDAAuD,0CAA0C,EAClG,MACF,EAE+B,UAAU,GAC3B,YAChB,CAlDA,IAAAQ,EAAAC,EAAA","sourcesContent":["import { google } from \"googleapis\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport os from \"os\";\n\n/**\n * Retrieves an access token for Google APIs using service account credentials.\n * @param client_email - The client email of the service account.\n * @param private_key - The private key of the service account.\n * @param customPath - (Optional) Custom path to the service account JSON file.\n * @returns The access token.\n * @throws Error if credentials are missing or invalid\n */\nexport async function getAccessToken(client_email?: string, private_key?: string, customPath?: string) {\n  if (!client_email && !private_key) {\n    const filePath = \"service_account.json\";\n    const filePathFromHome = path.join(os.homedir(), \".gis\", \"service_account.json\");\n    const isFile = fs.existsSync(filePath);\n    const isFileFromHome = fs.existsSync(filePathFromHome);\n    const isCustomFile = !!customPath && fs.existsSync(customPath);\n\n    if (!isFile && !isFileFromHome && !isCustomFile) {\n      throw new Error(`${filePath} not found, please follow the instructions in README.md`);\n    }\n\n    const key = JSON.parse(\n      fs.readFileSync(!!customPath && isCustomFile ? customPath : isFile ? filePath : filePathFromHome, \"utf8\")\n    );\n    client_email = key.client_email;\n    private_key = key.private_key;\n  } else {\n    if (!client_email) {\n      throw new Error(\"Missing client_email in service account credentials.\");\n    }\n\n    if (!private_key) {\n      throw new Error(\"Missing private_key in service account credentials.\");\n    }\n  }\n\n  const jwtClient = new google.auth.JWT(\n    client_email,\n    undefined,\n    private_key,\n    [\"https://www.googleapis.com/auth/webmasters.readonly\", \"https://www.googleapis.com/auth/indexing\"],\n    undefined\n  );\n\n  const tokens = await jwtClient.authorize();\n  return tokens.access_token;\n}\n"]}